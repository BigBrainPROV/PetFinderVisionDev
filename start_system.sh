#!/bin/bash

echo "üöÄ –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã PetFinderVision..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
if [ ! -f "manage.py" ]; then
    echo "‚ùå –û—à–∏–±–∫–∞: –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞"
    exit 1
fi

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –ø–æ—Ä—Ç–∞
check_port() {
    local port=$1
    if lsof -Pi :$port -sTCP:LISTEN -t >/dev/null ; then
        echo "‚ö†Ô∏è  –ü–æ—Ä—Ç $port —É–∂–µ –∑–∞–Ω—è—Ç"
        return 1
    else
        return 0
    fi
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º PostgreSQL –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
echo "üêò –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö PostgreSQL..."
if ! docker ps | grep -q "postgres:14.5"; then
    echo "üêò –ó–∞–ø—É—Å–∫ PostgreSQL —á–µ—Ä–µ–∑ Docker..."
    docker-compose up -d db
    echo "‚è≥ –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
    sleep 5
else
    echo "‚úÖ PostgreSQL —É–∂–µ –∑–∞–ø—É—â–µ–Ω"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –ø–æ—Ä—Ç–æ–≤
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤..."
check_port 8000 || echo "Django —Å–µ—Ä–≤–µ—Ä —É–∂–µ –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 8000"
check_port 5004 || echo "ML —Å–µ—Ä–≤–∏—Å —É–∂–µ –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 5004"
check_port 3000 || echo "Frontend —É–∂–µ –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 3000"

# –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
echo "üêç –ê–∫—Ç–∏–≤–∞—Ü–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
source venv/bin/activate

# –ó–∞–ø—É—Å–∫ Django —Å–µ—Ä–≤–µ—Ä–∞
echo "üêç –ó–∞–ø—É—Å–∫ Django —Å–µ—Ä–≤–µ—Ä–∞ (PostgreSQL)..."
python3 manage.py runserver &
DJANGO_PID=$!
echo "Django PID: $DJANGO_PID"

# –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ Django
sleep 3

# –ó–∞–ø—É—Å–∫ ML —Å–µ—Ä–≤–∏—Å–∞
echo "üß† –ó–∞–ø—É—Å–∫ ML —Å–µ—Ä–≤–∏—Å–∞..."
cd ml_service
python3 app.py &
ML_PID=$!
echo "ML Service PID: $ML_PID"
cd ..

# –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ ML —Å–µ—Ä–≤–∏—Å–∞
sleep 5

# –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–∑—É –≤–µ–∫—Ç–æ—Ä–æ–≤ –ø—Ä–∏–∑–Ω–∞–∫–æ–≤
echo "üìä –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–∑—ã –≤–µ–∫—Ç–æ—Ä–æ–≤ –ø—Ä–∏–∑–Ω–∞–∫–æ–≤..."
curl -X POST http://localhost:5004/update_database

# –ó–∞–ø—É—Å–∫ Frontend
echo "‚öõÔ∏è  –ó–∞–ø—É—Å–∫ Frontend..."
cd frontend
npm start &
FRONTEND_PID=$!
echo "Frontend PID: $FRONTEND_PID"
cd ..

echo ""
echo "‚úÖ –°–∏—Å—Ç–µ–º–∞ –∑–∞–ø—É—â–µ–Ω–∞!"
echo ""
echo "üìã –°–µ—Ä–≤–∏—Å—ã:"
echo "   üêò PostgreSQL: localhost:5432"
echo "   üêç Django API: http://localhost:8000"
echo "   üß† ML Service: http://localhost:5004"
echo "   ‚öõÔ∏è  Frontend: http://localhost:3000"
echo ""
echo "üë• –¢–µ—Å—Ç–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:"
echo "   ‚Ä¢ admin / admin123 (–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä)"
echo "   ‚Ä¢ testuser / test123 (–æ–±—ã—á–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å)"
echo ""
echo "üîß –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:"
echo "   –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤: ./stop_system.sh"
echo "   –ò–ª–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C"
echo ""

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤—Å–µ—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
cleanup() {
    echo ""
    echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º—ã..."
    kill $DJANGO_PID 2>/dev/null
    kill $ML_PID 2>/dev/null
    kill $FRONTEND_PID 2>/dev/null
    echo "‚úÖ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
    echo "üí° PostgreSQL –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –≤ Docker (–æ—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: docker-compose down)"
    exit 0
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–≥–Ω–∞–ª–∞ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è
trap cleanup SIGINT SIGTERM

# –û–∂–∏–¥–∞–Ω–∏–µ
echo "üí° –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤"
wait 