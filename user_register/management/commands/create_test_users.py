from django.core.management.base import BaseCommand
from django.contrib.auth.models import User


class Command(BaseCommand):
    help = 'Creates test users for development'

    def handle(self, *args, **kwargs):
        # –°–æ–∑–¥–∞–µ–º —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if not User.objects.filter(username='admin').exists():
            admin_user = User.objects.create_superuser(
                username='admin',
                email='admin@petfinder.com',
                password='admin123'
            )
            self.stdout.write(
                self.style.SUCCESS(f'‚úÖ –°–æ–∑–¥–∞–Ω —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: admin (–ø–∞—Ä–æ–ª—å: admin123)')
            )
        else:
            self.stdout.write(
                self.style.WARNING('‚ö†Ô∏è –°—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å admin —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç')
            )

        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        test_users = [
            {
                'username': 'testuser',
                'email': 'test@petfinder.com',
                'password': 'test123',
                'first_name': '–¢–µ—Å—Ç',
                'last_name': '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'
            },
            {
                'username': 'anna',
                'email': 'anna@petfinder.com', 
                'password': 'anna123',
                'first_name': '–ê–Ω–Ω–∞',
                'last_name': '–ü–µ—Ç—Ä–æ–≤–∞'
            },
            {
                'username': 'mikhail',
                'email': 'mikhail@petfinder.com',
                'password': 'mikhail123', 
                'first_name': '–ú–∏—Ö–∞–∏–ª',
                'last_name': '–ò–≤–∞–Ω–æ–≤'
            },
            {
                'username': 'elena',
                'email': 'elena@petfinder.com',
                'password': 'elena123',
                'first_name': '–ï–ª–µ–Ω–∞', 
                'last_name': '–°–∏–¥–æ—Ä–æ–≤–∞'
            }
        ]

        created_count = 0
        for user_data in test_users:
            username = user_data['username']
            if not User.objects.filter(username=username).exists():
                user = User.objects.create_user(**user_data)
                created_count += 1
                self.stdout.write(
                    self.style.SUCCESS(f'‚úÖ –°–æ–∑–¥–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {username} (–ø–∞—Ä–æ–ª—å: {user_data["password"]})')
                )
            else:
                self.stdout.write(
                    self.style.WARNING(f'‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {username} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç')
                )

        self.stdout.write('')
        self.stdout.write(self.style.SUCCESS(f'üéâ –°–æ–∑–¥–∞–Ω–æ {created_count} –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π'))
        self.stdout.write('')
        self.stdout.write(self.style.SUCCESS('üìã –î–ª—è –≤—Ö–æ–¥–∞ –≤ —Å–∏—Å—Ç–µ–º—É –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:'))
        self.stdout.write('   ‚Ä¢ admin / admin123 (–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä)')
        self.stdout.write('   ‚Ä¢ testuser / test123 (–æ–±—ã—á–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å)')
        self.stdout.write('   ‚Ä¢ anna / anna123')
        self.stdout.write('   ‚Ä¢ mikhail / mikhail123')
        self.stdout.write('   ‚Ä¢ elena / elena123') 